name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod

  push:
    branches:
      - dev

jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      branch_name: ${{ steps.set-env.outputs.branch_name }}
    steps:
      - name: 🧠 Déduire l’environnement
        id: set-env
        run: |
          BRANCH_NAME="${GITHUB_REF##*/}"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          
          if [ "${{ github.event_name }}" = "push" ]; then
            if [ "${{ github.ref }}" = "refs/heads/main" ]; then
              echo "environment=prod" >> $GITHUB_OUTPUT
            else
              echo "environment=dev" >> $GITHUB_OUTPUT
            fi
          else
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          fi

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 🏷️ Générer un tag basé sur le commit SHA
        id: generate-tag
        run: |
          TAG=$(git rev-parse --short HEAD)
          echo "TAG=$TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: 🔐 Connexion à Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🐳 Build Docker image
        run: |
          docker build --build-arg ENV=$ENVIRONMENT -t $IMAGE_NAME:${{ steps.generate-tag.outputs.tag }} .
          docker build --build-arg ENV=$ENVIRONMENT -t $IMAGE_NAME:latest .

      - name: 📤 Push Docker image
        run: |
          docker push $IMAGE_NAME:${{ steps.generate-tag.outputs.tag }}
          docker push $IMAGE_NAME:latest

  deploy:
    needs: [build-push, set-environment]
    runs-on: ubuntu-latest
    environment: ${{ needs.set-environment.outputs.environment }}
    env:
      ENVIRONMENT: ${{ needs.set-environment.outputs.environment }}

    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4

      -   name: 📦 Définir les variables selon l’environnement
          id: set-vars
          run: |
            if [ "$ENVIRONMENT" = "prod" ]; then
                echo "release_name=peps-discord-prod" >> $GITHUB_OUTPUT
                echo "namespace=peps-prod" >> $GITHUB_OUTPUT
                echo "values_file=values-prod.yaml" >> $GITHUB_OUTPUT
            else
                echo "release_name=peps-discord-dev" >> $GITHUB_OUTPUT
                echo "namespace=peps-dev" >> $GITHUB_OUTPUT
                echo "values_file=values-dev.yaml" >> $GITHUB_OUTPUT
            fi

      - name: ⚙️ Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: ⚙️ Set up Helm
        uses: azure/setup-helm@v3

      - name: 📄 Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config

      - name: 🚀 Deploy with Helm
        run: |
          helm upgrade --install ${{ steps.set-vars.outputs.release_name }} ./deploy \
            --namespace ${{ steps.set-vars.outputs.namespace }} \
            --set image.repository=${{ env.IMAGE_NAME }} \
            --set image.tag=${{ needs.build-push.outputs.image_tag }} \
            -f deploy/${{ steps.set-vars.outputs.values_file }}

  notify-discord:
    needs: [deploy, set-environment, build-push]
    runs-on: ubuntu-latest
    environment: ${{ needs.set-environment.outputs.environment }}
    env:
      ENVIRONMENT: ${{ needs.set-environment.outputs.environment }}
      TAG: ${{ needs.build-push.outputs.image_tag }}
    steps:
      - name: 📣 Envoyer une notification Discord
        run: |
          curl -H "Content-Type: application/json" \
          -X POST \
          -d '{
            "username": "Team Peps CI/CD",
            "embeds": [{
              "title": "✅ Nouvelle version déployée en '"$ENVIRONMENT"'",
              "description": "**Bot discord**\n**Branche :** ${{ needs.set-environment.outputs.branch_name }}\n**Image tag :** '"$TAG"'\n[Voir le commit](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n\n**Auteur :** ${{ github.actor }}",
              "color": 5814783
            }]
          }' ${{ secrets.DISCORD_WEBHOOK_URL }}
